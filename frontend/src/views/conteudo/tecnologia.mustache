<h2>Tecnologias Utilizadas:</h2>
<ul>
  <li><i class="fab fa-html5"></i> Front-end: HTML, CSS, JavaScript</li>
  <li><i class="fab fa-node-js"></i> Back-end: Node.js, Express.js</li>
  <li><i class="fas fa-database"></i> Banco de Dados: SQLite</li>
</ul>

<h2>Bibliotecas Utilizadas:</h2>
<ul>
  <li>
    <i class="fas fa-cog"></i> bcrypt: Biblioteca para criptografia de senhas.
  </li>
  <li>
    <i class="fas fa-cog"></i> cors: Middleware para o Express que adiciona
    suporte a CORS (Cross-Origin Resource Sharing).
  </li>
  <li>
    <i class="fas fa-cog"></i> dotenv: Biblioteca para carregar variáveis de
    ambiente de um arquivo .env.
  </li>
  <li>
    <i class="fas fa-cog"></i> express: Framework web rápido e flexível para
    Node.js.
  </li>
  <li>
    <i class="fas fa-cog"></i> joi: Biblioteca para validação de dados em
    JavaScript.
  </li>
  <li>
    <i class="fas fa-cog"></i> jsonwebtoken: Biblioteca para geração e
    verificação de tokens JWT (JSON Web Tokens).
  </li>
  <li>
    <i class="fas fa-cog"></i> mustache: Um sistema de template simples e
    lógico.
  </li>
  <li>
    <i class="fas fa-cog"></i> mustache-express: Um mecanismo de template para o
    Express baseado no Mustache.
  </li>
  <li>
    <i class="fas fa-cog"></i> nodemailer: Biblioteca para enviar e-mails usando
    Node.js.
  </li>
  <li>
    <i class="fas fa-cog"></i> sequelize: ORM (Object-Relational Mapping) para
    bancos de dados SQL.
  </li>
  <li>
    <i class="fas fa-cog"></i> winston: Biblioteca para registro de logs em
    Node.js, oferecendo várias opções de transporte e formatação.
  </li>
  <li>
    <i class="fas fa-cog"></i> sqlite3, pdfkit, chart.js, canvas e
    chartjs-node-canvas
  </li>
</ul>
