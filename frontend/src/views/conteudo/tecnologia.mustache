<h2>Tecnologias Utilizadas:</h2>
<ul>
  <li><i class="fab fa-html5"></i> Front-end: HTML, CSS, JavaScript</li>
  <li><i class="fab fa-node-js"></i> Back-end: Node.js, Express.js</li>
  <li><i class="fas fa-database"></i> Banco de Dados: SQLite</li>
</ul>

<h2>Bibliotecas Utilizadas:</h2>
<ul>
  <li>
    <i class="fas fa-cog"></i> dotenv: Biblioteca para carregar variáveis de
    ambiente de um arquivo .env.
  </li>
  <li>
    <i class="fas fa-cog"></i> express: Framework web rápido e flexível para
    Node.js.
  </li>
  <li>
    <i class="fas fa-cog"></i> mustache: Um sistema de template simples e
    lógico, semelhante ao Handlebars.
  </li>
  <li>
    <i class="fas fa-cog"></i> mustache-express: Um mecanismo de template para o
    Express baseado no Mustache.
  </li>
  <li>
    <i class="fas fa-cog"></i> nodemailer: Biblioteca para enviar e-mails usando
    Node.js.
  </li>
  <li>
    <i class="fas fa-cog"></i> sequelize: ORM (Object-Relational Mapping)
    baseado em promessas para bancos de dados SQL, incluindo suporte para MySQL,
    PostgreSQL, SQLite e outros.
  </li>
  <li><i class="fas fa-cog"></i> sqlite3: Driver SQLite para Node.js.</li>
  <li>
    <i class="fas fa-cog"></i> joi: Biblioteca para validação de dados em
    JavaScript.
  </li>
  <li>
    <i class="fas fa-cog"></i> cors: Middleware para o Express que adiciona
    suporte a CORS (Cross-Origin Resource Sharing) para permitir comunicação
    entre origens diferentes em um aplicativo web.
  </li>
</ul>
